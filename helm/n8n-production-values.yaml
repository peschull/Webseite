# Production n8n Helm Values für Kubernetes-native Deployment
# Version: 1.0 - 21. Juni 2025
# Deployment-Modus: Queue-basiert mit separaten Worker-Pods

# Grundkonfiguration
fullnameOverride: "n8n-prod"
nameOverride: "n8n"

# n8n Konfiguration
n8n:
  # Produktionsumgebung
  database:
    type: postgresdb
    postgresdb:
      host: "postgresql.n8n-prod.svc.cluster.local"
      port: 5432
      database: "n8n"
      user: "n8n"
      password: "{{secrets.postgresql.password}}"
      schema: "public"
      ssl:
        enabled: true
        rejectUnauthorized: false

  # Queue-Konfiguration (Redis)
  redis:
    host: "redis.n8n-prod.svc.cluster.local"
    port: 6379
    password: "{{secrets.redis.password}}"
    db: 0

  # Deployment-Konfiguration
  deployment:
    # Webhook & UI Pod (1x)
    webhook:
      enabled: true
      replicaCount: 1
      resources:
        requests:
          cpu: "500m"
          memory: "1Gi"
        limits:
          cpu: "2"
          memory: "4Gi"
      
    # Worker Pods (2-6x mit HPA)
    worker:
      enabled: true
      replicaCount: 2
      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 6
        targetCPUUtilizationPercentage: 70
        targetMemoryUtilizationPercentage: 80
      resources:
        requests:
          cpu: "1"
          memory: "2Gi"
        limits:
          cpu: "4"
          memory: "8Gi"
      
      # Queue-Konfiguration für Workers
      queues:
        - name: "default"
          concurrency: 10
        - name: "email"
          concurrency: 5
        - name: "accounting"
          concurrency: 3
        - name: "social"
          concurrency: 2

  # Externe Services
  config:
    # Basis-Konfiguration
    N8N_PROTOCOL: "https"
    N8N_HOST: "n8n.menschlichkeit.at"
    N8N_PORT: "443"
    N8N_EDITOR_BASE_URL: "https://n8n.menschlichkeit.at"
    
    # Sicherheit
    N8N_SECURE_COOKIE: "true"
    N8N_DIAGNOSTICS_ENABLED: "false"
    N8N_VERSION_NOTIFICATIONS_ENABLED: "false"
    N8N_TEMPLATES_ENABLED: "false"
    N8N_PUBLIC_API_DISABLED: "true"
    
    # Metriken für Prometheus
    N8N_METRICS: "true"
    N8N_METRICS_PREFIX: "n8n_"
    
    # Queue-Mode aktivieren
    EXECUTIONS_MODE: "queue"
    QUEUE_BULL_REDIS_HOST: "redis.n8n-prod.svc.cluster.local"
    QUEUE_BULL_REDIS_PORT: "6379"
    QUEUE_BULL_REDIS_PASSWORD: "{{secrets.redis.password}}"
    
    # Binary-Storage (MinIO S3)
    N8N_DEFAULT_BINARY_DATA_MODE: "s3"
    N8N_BINARY_DATA_S3_ENDPOINT: "minio.n8n-prod.svc.cluster.local"
    N8N_BINARY_DATA_S3_PORT: "9000"
    N8N_BINARY_DATA_S3_BUCKET: "n8n-binaries"
    N8N_BINARY_DATA_S3_ACCESS_KEY: "{{secrets.minio.accessKey}}"
    N8N_BINARY_DATA_S3_SECRET_KEY: "{{secrets.minio.secretKey}}"
    
    # Logging
    N8N_LOG_LEVEL: "info"
    N8N_LOG_OUTPUT: "console"
    
    # Workflow-Limits
    N8N_WORKFLOW_TIMEOUT: "300"
    N8N_MAX_EXECUTION_TIMEOUT: "3600"

# Service-Konfiguration
service:
  type: ClusterIP
  port: 5678
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5678"
    prometheus.io/path: "/metrics"

# Ingress-Konfiguration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
  hosts:
    - host: n8n.menschlichkeit.at
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: n8n-tls
      hosts:
        - n8n.menschlichkeit.at

# Persistent Volume Claims
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 10Gi
  storageClass: "fast-ssd"

# Health Checks
livenessProbe:
  httpGet:
    path: /healthz
    port: 5678
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /healthz
    port: 5678
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Pod-Sicherheit
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  capabilities:
    drop:
      - ALL

# Network Policies
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
      ports:
      - protocol: TCP
        port: 5678
  egress:
    - to:
      - namespaceSelector:
          matchLabels:
            name: n8n-prod
      ports:
      - protocol: TCP
        port: 5432  # PostgreSQL
      - protocol: TCP
        port: 6379  # Redis
      - protocol: TCP
        port: 9000  # MinIO
    - to: []  # Externe APIs
      ports:
      - protocol: TCP
        port: 443
      - protocol: TCP
        port: 80

# Resource Quotas
resourceQuota:
  enabled: true
  hard:
    requests.cpu: "10"
    requests.memory: "20Gi"
    limits.cpu: "20"
    limits.memory: "40Gi"
    persistentvolumeclaims: "10"

# Monitoring
serviceMonitor:
  enabled: true
  namespace: monitoring
  interval: 30s
  scrapeTimeout: 10s
  labels:
    app: n8n
    release: prometheus

# Secrets (verschlüsselt mit SOPS)
secrets:
  create: true
  name: "n8n-secrets"
  data:
    N8N_ENCRYPTION_KEY: "{{secrets.n8n.encryptionKey}}"
    N8N_USER_MANAGEMENT_JWT_SECRET: "{{secrets.n8n.jwtSecret}}"
    
    # CiviCRM API
    CIVICRM_API_KEY: "{{secrets.civicrm.apiKey}}"
    CIVICRM_SITE_KEY: "{{secrets.civicrm.siteKey}}"
    CIVICRM_BASE_URL: "https://civicrm.menschlichkeit.at"
    
    # CraftMyPDF
    CRAFTMYPDF_API_KEY: "{{secrets.craftmypdf.apiKey}}"
    
    # Brevo
    BREVO_API_KEY: "{{secrets.brevo.apiKey}}"
    BREVO_SMTP_KEY: "{{secrets.brevo.smtpKey}}"
    
    # FreeFinance
    FREEFINANCE_API_KEY: "{{secrets.freefinance.apiKey}}"
    FREEFINANCE_BASE_URL: "https://api.freefinance.com/v1"
    
    # OpenAI
    OPENAI_API_KEY: "{{secrets.openai.apiKey}}"
    
    # Social Media APIs
    META_ACCESS_TOKEN: "{{secrets.meta.accessToken}}"
    META_PAGE_ID: "{{secrets.meta.pageId}}"
    LINKEDIN_ACCESS_TOKEN: "{{secrets.linkedin.accessToken}}"
    LINKEDIN_COMPANY_ID: "{{secrets.linkedin.companyId}}"
    
    # Nextcloud
    NEXTCLOUD_BASE_URL: "https://cloud.menschlichkeit.at"
    NEXTCLOUD_API_USER: "{{secrets.nextcloud.apiUser}}"
    NEXTCLOUD_API_PASSWORD: "{{secrets.nextcloud.apiPassword}}"
    
    # Telegram
    TELEGRAM_BOT_TOKEN: "{{secrets.telegram.botToken}}"
    TELEGRAM_CHAT_ID: "{{secrets.telegram.chatId}}"
    
    # Slack (Monitoring)
    SLACK_WEBHOOK_URL: "{{secrets.slack.webhookUrl}}"

# Backup-Konfiguration
backup:
  enabled: true
  schedule: "0 2 * * *"  # Täglich um 2:00 Uhr
  retention: "30d"
  destination: "s3://backup-bucket/n8n-prod/"
