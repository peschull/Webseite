# Helm Values for n8n Production Deployment
# File: helm/n8n-values.yaml

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []

# n8n specific configuration
replicaCount: 1  # Main instance (webhook + UI)

image:
  repository: n8nio/n8n
  tag: "1.41.0"
  pullPolicy: IfNotPresent

# Queue mode configuration
queue:
  enabled: true
  redis:
    host: "redis-master.redis.svc.cluster.local"
    port: 6379
    db: 0
    password: ""

# Worker configuration
workers:
  enabled: true
  replicaCount: 4  # Will be scaled by HPA
  
  # Separate queues with different concurrency
  queues:
    - name: default
      concurrency: 10
      replicas: 2
    - name: email  
      concurrency: 5
      replicas: 1
    - name: accounting
      concurrency: 3
      replicas: 1
    - name: social
      concurrency: 2
      replicas: 1

# Database configuration
database:
  type: postgresdb
  host: "postgresql.postgresql.svc.cluster.local"
  port: 5432
  database: n8n
  username: n8n_user
  # Password from secret
  existingSecret: "n8n-postgres-secret"
  existingSecretPasswordKey: "password"

# Binary data configuration
binaryDataMode: s3
s3:
  endpoint: "https://minio.storage.svc.cluster.local:9000"
  bucket: "n8n-binaries"
  region: "eu-central-1"
  useSSL: true
  # Credentials from secret
  existingSecret: "n8n-s3-secret"
  accessKeyIdKey: "accessKeyId"
  secretAccessKeyKey: "secretAccessKey"

# Security configuration
security:
  basicAuth:
    enabled: true
    existingSecret: "n8n-auth-secret"
    userKey: "username"
    passwordKey: "password"
  
  encryption:
    existingSecret: "n8n-encryption-secret"
    keyKey: "encryptionKey"

# Service configuration
service:
  type: ClusterIP
  port: 5678
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5678"
    prometheus.io/path: "/metrics"

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
  hosts:
    - host: n8n.menschlichkeit.at
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: n8n-tls-secret
      hosts:
        - n8n.menschlichkeit.at

# Resource configuration
resources:
  # Main instance
  main:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  
  # Workers
  workers:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

# Horizontal Pod Autoscaler
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Node selection
nodeSelector: {}
tolerations: []
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - n8n
          topologyKey: kubernetes.io/hostname

# Persistent Volume Configuration
persistence:
  enabled: true
  storageClass: "fast-ssd"
  accessMode: ReadWriteOnce
  size: 10Gi

# Health checks
healthcheck:
  enabled: true
  livenessProbe:
    httpGet:
      path: /healthz
      port: 5678
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /healthz
      port: 5678
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

# Environment variables
env:
  - name: N8N_LOG_LEVEL
    value: "info"
  - name: N8N_LOG_OUTPUT
    value: "console"
  - name: N8N_METRICS
    value: "true"
  - name: EXECUTIONS_TIMEOUT
    value: "300"
  - name: EXECUTIONS_DATA_SAVE_ON_ERROR
    value: "all"
  - name: EXECUTIONS_DATA_SAVE_ON_SUCCESS
    value: "all"
  - name: EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS
    value: "true"

# Secret configuration (managed externally)
secrets:
  postgres:
    name: "n8n-postgres-secret"
    data:
      password: "" # Set via SOPS or external secret manager
  
  s3:
    name: "n8n-s3-secret"
    data:
      accessKeyId: ""
      secretAccessKey: ""
  
  auth:
    name: "n8n-auth-secret"
    data:
      username: "admin"
      password: ""
  
  encryption:
    name: "n8n-encryption-secret"
    data:
      encryptionKey: ""

# ServiceMonitor for Prometheus
serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s
  labels:
    app: n8n
    release: prometheus

# Network Policies
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 5678
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 5678
  egress:
    - to: []  # Allow all outbound traffic

# Pod Security Context
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

# Container Security Context
containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  capabilities:
    drop:
      - ALL
